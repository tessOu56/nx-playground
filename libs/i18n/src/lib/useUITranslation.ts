import { useTranslation as useI18nTranslation } from 'react-i18next';

// Type for UI translation keys
type UITranslationKeys =
  | 'ui.button.submit'
  | 'ui.button.cancel'
  | 'ui.button.save'
  | 'ui.button.delete'
  | 'ui.button.edit'
  | 'ui.button.add'
  | 'ui.button.close'
  | 'ui.button.back'
  | 'ui.button.next'
  | 'ui.button.previous'
  | 'ui.button.confirm'
  | 'ui.button.reset'
  | 'ui.button.search'
  | 'ui.button.filter'
  | 'ui.button.export'
  | 'ui.button.import'
  | 'ui.button.download'
  | 'ui.button.upload'
  | 'ui.button.preview'
  | 'ui.button.refresh'
  | 'ui.form.required'
  | 'ui.form.optional'
  | 'ui.form.invalid'
  | 'ui.form.minLength'
  | 'ui.form.maxLength'
  | 'ui.form.email'
  | 'ui.form.password'
  | 'ui.form.confirmPassword'
  | 'ui.form.passwordsNotMatch'
  | 'ui.form.username'
  | 'ui.form.fullName'
  | 'ui.form.phone'
  | 'ui.form.address'
  | 'ui.form.city'
  | 'ui.form.country'
  | 'ui.form.postalCode'
  | 'ui.form.description'
  | 'ui.form.notes'
  | 'ui.form.tags'
  | 'ui.form.category'
  | 'ui.form.status'
  | 'ui.form.priority'
  | 'ui.form.date'
  | 'ui.form.time'
  | 'ui.form.startDate'
  | 'ui.form.endDate'
  | 'ui.form.dueDate'
  | 'ui.table.noData'
  | 'ui.table.loading'
  | 'ui.table.error'
  | 'ui.table.retry'
  | 'ui.table.page'
  | 'ui.table.of'
  | 'ui.table.items'
  | 'ui.table.perPage'
  | 'ui.table.goToPage'
  | 'ui.table.show'
  | 'ui.table.entries'
  | 'ui.table.searchPlaceholder'
  | 'ui.table.filterPlaceholder'
  | 'ui.table.selectAll'
  | 'ui.table.deselectAll'
  | 'ui.table.selected'
  | 'ui.table.actions'
  | 'ui.table.view'
  | 'ui.table.copy'
  | 'ui.table.move'
  | 'ui.table.archive'
  | 'ui.table.restore'
  | 'ui.table.duplicate'
  | 'ui.table.share'
  | 'ui.table.print'
  | 'ui.modal.confirmDelete'
  | 'ui.modal.confirmDeleteMessage'
  | 'ui.modal.confirmAction'
  | 'ui.modal.confirmActionMessage'
  | 'ui.modal.discardChanges'
  | 'ui.modal.discardChangesMessage'
  | 'ui.modal.unsavedChanges'
  | 'ui.modal.unsavedChangesMessage'
  | 'ui.modal.loading'
  | 'ui.modal.success'
  | 'ui.modal.error'
  | 'ui.modal.warning'
  | 'ui.modal.info'
  | 'ui.navigation.home'
  | 'ui.navigation.dashboard'
  | 'ui.navigation.settings'
  | 'ui.navigation.profile'
  | 'ui.navigation.logout'
  | 'ui.navigation.login'
  | 'ui.navigation.register'
  | 'ui.navigation.forgotPassword'
  | 'ui.navigation.resetPassword'
  | 'ui.navigation.help'
  | 'ui.navigation.support'
  | 'ui.navigation.feedback'
  | 'ui.navigation.about'
  | 'ui.navigation.privacy'
  | 'ui.navigation.terms'
  | 'ui.navigation.contact'
  | 'ui.status.active'
  | 'ui.status.inactive'
  | 'ui.status.pending'
  | 'ui.status.approved'
  | 'ui.status.rejected'
  | 'ui.status.completed'
  | 'ui.status.cancelled'
  | 'ui.status.draft'
  | 'ui.status.published'
  | 'ui.status.archived'
  | 'ui.status.deleted'
  | 'ui.status.processing'
  | 'ui.status.failed'
  | 'ui.status.success'
  | 'ui.status.warning'
  | 'ui.status.error'
  | 'ui.status.info'
  | 'ui.time.now'
  | 'ui.time.today'
  | 'ui.time.yesterday'
  | 'ui.time.tomorrow'
  | 'ui.time.thisWeek'
  | 'ui.time.lastWeek'
  | 'ui.time.nextWeek'
  | 'ui.time.thisMonth'
  | 'ui.time.lastMonth'
  | 'ui.time.nextMonth'
  | 'ui.time.thisYear'
  | 'ui.time.lastYear'
  | 'ui.time.nextYear'
  | 'ui.time.ago'
  | 'ui.time.in'
  | 'ui.time.minutes'
  | 'ui.time.hours'
  | 'ui.time.days'
  | 'ui.time.weeks'
  | 'ui.time.months'
  | 'ui.time.years'
  | 'ui.validation.required'
  | 'ui.validation.email'
  | 'ui.validation.url'
  | 'ui.validation.number'
  | 'ui.validation.integer'
  | 'ui.validation.positive'
  | 'ui.validation.min'
  | 'ui.validation.max'
  | 'ui.validation.minLength'
  | 'ui.validation.maxLength'
  | 'ui.validation.pattern'
  | 'ui.validation.unique'
  | 'ui.validation.passwordStrength'
  | 'ui.validation.passwordMatch'
  | 'ui.validation.fileSize'
  | 'ui.validation.fileType'
  | 'ui.validation.dateRange'
  | 'ui.validation.futureDate'
  | 'ui.validation.pastDate';

export const useUITranslation = () => {
  const { t, i18n, ready } = useI18nTranslation('ui');

  const translate = (key: UITranslationKeys, options?: any) => {
    return t(key, options);
  };

  return {
    t: translate,
    i18n,
    ready,
    currentLanguage: i18n.language,
    changeLanguage: i18n.changeLanguage,
  };
};
